@model Exchange.Infrastructure.ViewModels.SellCurrencyViewModel
<div class="modal-window" id="modal-window">
<div class="modal-dialog modal-info">
    <div class="modal-content ">
        <div class="modal-body">
            @using (Ajax.BeginForm("SellCurrency", "Application", new AjaxOptions { HttpMethod = "POST", OnSuccess = "onAjaxRequestSuccess" }, new { @class = "container-flex formDetail", @id = "SellForm", role = "form" }))
            {
                @Html.HiddenFor(x=>x.CurrencyId)
                <spa>Enter quantity of selected currency to buy and confirm</spa>
                <hr />
                <div class="content-confirm" style="margin-top:20px">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group error-message">
                    <span></span>
                </div>
                <div>
                    <button type="button" class="btn btn-green close-modal">Anuluj</button>
                    <button class="btn" id="confirm">Confirm</button>
                </div>
            }   
        </div>
    </div>
</div>
</div>
<script>
    $(document).ready(function () {
        $('#SellForm').submit(function (event) {
            event.preventDefault();
            event.stopImmediatePropagation();
            var action = $("#SellForm").attr("action");
            dataString = new FormData($("#SellForm").get(0));
            contentType = false;
            processData = false;
            $.ajax({
                type: "POST",
                url: action,
                data: dataString,
                dataType: "json",
                contentType: contentType,
                processData: processData,
                success: function (result) {
                    onAjaxRequestSuccess(result);
                },
                //   error: function (jqXHR, textStatus, errorThrown) {
                error: function (result) {
                    // alert(result.ErrorMsg);
                }
            });
        })
    });
    var onAjaxRequestSuccess = function (result) {
        if (result.Succeeded) {
            closeForm();
        }
        else {
            $('.error-message > span').html(result.Message);  
        }
    }
</script>
